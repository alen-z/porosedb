global
    # log 127.0.0.1 local0 notice
    maxconn     4000
    # user haproxy
    # group haproxy
    daemon

defaults
    # log global
    mode        http
    option      dontlognull
    option      httpclose
    # option      httplog
    # option      forwardfor
    option      redispatch
    timeout connect 10000 # default 3 second time out if a backend is not found
    timeout client 3000
    timeout server 3000
    maxconn     60000
    retries     3

#listen 0.0.0.0:80 # listen eu-central-1 52.59.166.189:80
#    bind *:80 # or use backend
#    # mode http added in defaults
#    # mode tcp
#    # balance roundrobin
#    balance first # first ignores weight
#    option httpclose
#    # option forwardfor # enable adding header in backend https://cbonte.github.io/haproxy-dconv/1.7/configuration.html#4-option%20forwardfor
#    option httpchk
#
#    # local first
#    server localhost 0.0.0.0:8081 check port 80 weight 1
#
#    # all servers
#    #eu
#    server eu-central-1 52.59.166.189:80 check port 80 weight 1
#    # ap
#    server ap-southeast-1b 13.229.71.4:80 check port 80 weight 1
#    # us
#    server us-east-1a 34.202.163.84:80 check port 80 weight 1

# new config
frontend entrypoint
    bind *:80
    acl site_dead nbsrv(local) eq 0
    use_backend backup if site_dead
    default_backend local

backend local
    option httpchk
    server localhost 0.0.0.0:8081 check port 8081

backend backup
    balance first # # first ignores weight, should reorder for each region, maxconn skips to the next
    option httpchk
    server eu-central-1 52.59.166.189:80 check port 80
    server ap-southeast-1b 13.229.71.4:80 check port 80
    server us-east-1a 34.202.163.84:80 check port 80

# stats
listen 0.0.0.0:8080
    bind *:8080
    mode http
    stats enable
    stats uri /
    stats realm Strictly\ Private
    stats auth admin:pass

# resolve-net can help aim for local service https://cbonte.github.io/haproxy-dconv/1.7/configuration.html#5.2-resolve-net
# current region should be excluded from backup because it gives false positive about availability - routing to different endpoint gave the OK result with LB but for this endpoint which is actually down